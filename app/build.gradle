apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.iliakplv.trademepreview"

        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion

        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    signingConfigs {
        // For demo purposes only.
        // Do not upload real keystore credentials to version control!
        release {
            storeFile file('../keystore.jks')
            storePassword 'qwerty'
            keyAlias 'alias'
            keyPassword 'qwerty'
        }
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            zipAlignEnabled true
            buildConfigField "String", "BASE_URL", "\"https://api.tmsandbox.co.nz/v1/\""
            buildConfigField "String", "CONSUMER_KEY", "\"A1AC63F0332A131A78FAC304D007E7D1\""
            buildConfigField "String", "CONSUMER_SECRET", "\"EC7F18B17A062962C6930A8AE88B16C7\""
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            applicationIdSuffix ".debug"
        }
        release {
            debuggable false
            minifyEnabled false
            zipAlignEnabled true
            buildConfigField "String", "BASE_URL", "\"https://api.tmsandbox.co.nz/v1/\""
            buildConfigField "String", "CONSUMER_KEY", "\"A1AC63F0332A131A78FAC304D007E7D1\""
            buildConfigField "String", "CONSUMER_SECRET", "\"EC7F18B17A062962C6930A8AE88B16C7\""
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile "com.google.dagger:dagger:$rootProject.ext.daggerVersion"
    annotationProcessor "com.google.dagger:dagger-compiler:$rootProject.ext.daggerVersion"
    compile "com.jakewharton:butterknife:$rootProject.ext.butterKnifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$rootProject.ext.butterKnifeVersion"
    compile "io.reactivex:rxjava:$rootProject.ext.rxJavaVersion"
    compile "io.reactivex:rxandroid:$rootProject.ext.rxAndroidVersion"
    compile "com.android.support:support-annotations:$rootProject.ext.supportLibraryVersion"
    compile "com.android.support:appcompat-v7:$rootProject.ext.supportLibraryVersion"
    compile "com.android.support:support-v4:$rootProject.ext.supportLibraryVersion"
    compile "com.android.support:recyclerview-v7:$rootProject.ext.supportLibraryVersion"
    compile "com.android.support:design:$rootProject.ext.supportLibraryVersion"

    compile "com.squareup.okhttp3:okhttp:$rootProject.ext.okHttpVersion"
    compile "com.squareup.okhttp3:logging-interceptor:$rootProject.ext.okHttpVersion"
    compile "com.squareup.retrofit2:retrofit:$rootProject.ext.retrofitVersion"
    compile "com.squareup.retrofit2:converter-gson:$rootProject.ext.retrofitVersion"
    compile "com.squareup.retrofit2:adapter-rxjava:$rootProject.ext.retrofitVersion"
    compile "com.google.code.gson:gson:$rootProject.ext.gsonVersion"

    compile "com.squareup.picasso:picasso:$rootProject.ext.picassoVersion"

    compile "com.jakewharton.timber:timber:$rootProject.ext.timberVersion"

    testCompile "junit:junit:$rootProject.ext.junitVersion"
    testCompile "org.mockito:mockito-all:$rootProject.ext.mockitoVersion"
    androidTestCompile("com.android.support.test.espresso:espresso-core:$rootProject.ext.espressoVersion", {
        exclude group: "com.android.support", module: "support-annotations"
    })
}
